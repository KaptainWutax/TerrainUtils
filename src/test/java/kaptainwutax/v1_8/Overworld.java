package kaptainwutax.v1_8;

import kaptainwutax.mcutils.state.Dimension;
import kaptainwutax.mcutils.version.MCVersion;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import static kaptainwutax.TestFramework.randomChunkGen;

public class Overworld {
    private static final int[] size16 = {
            75, 64, 56, 78, 65, 90, 59, 59, 66, 62, 71, 61, 64, 64, 76, 61,
            79, 55, 65, 66, 61, 65, 78, 61, 62, 92, 63, 58, 79, 60, 56, 69,
            65, 63, 63, 65, 63, 64, 111, 129, 60, 71, 65, 57, 70, 61, 64, 63,
            68, 73, 62, 80, 78, 63, 67, 73, 71, 68, 68, 98, 62, 112, 61, 64,
            71, 90, 63, 80, 76, 62, 62, 56, 69, 60, 67, 77, 64, 66, 107, 74,
            60, 65, 59, 63, 76, 100, 60, 92, 78, 76, 75, 64, 71, 60, 111, 64,
            59, 99, 66, 65, 64, 73, 72, 77, 60, 59, 88, 66, 63, 70, 64, 63,
            85, 61, 67, 106, 61, 67, 62, 58, 77, 61, 64, 63, 69, 69, 62, 64,
            73, 80, 63, 63, 91, 68, 69, 68, 64, 102, 60, 69, 103, 62, 67, 61,
            68, 128, 68, 63, 62, 105, 72, 68, 125, 70, 62, 71, 58, 62, 59, 98,
            62, 64, 64, 64, 74, 69, 80, 62, 64, 64, 69, 71, 61, 73, 79, 65,
            83, 74, 60, 70, 89, 64, 79, 84, 60, 63, 61, 66, 61, 71, 67, 58,
            62, 64, 60, 60, 62, 70, 64, 65, 79, 72, 72, 64, 60, 69, 73, 60,
            72, 63, 64, 58, 64, 73, 63, 61, 61, 72, 66, 66, 59, 65, 63, 61,
            73, 69, 67, 58, 60, 67, 59, 60, 78, 61, 62, 73, 67, 61, 72, 64,
            60, 67, 74, 62, 61, 59, 75, 56, 63, 56, 71, 80, 67, 75, 69, 117
    };

    private static final int[] size32 = {
            69, 70, 75, 59, 61, 64, 64, 75, 62, 59, 61, 66, 62, 74, 56, 73, 61, 89, 62, 69, 70, 62, 59, 80, 63, 64, 84, 59, 64, 59, 106, 105,
            68, 74, 62, 63, 96, 83, 64, 74, 60, 64, 61, 94, 72, 61, 61, 62, 78, 83, 67, 65, 75, 64, 61, 69, 79, 70, 59, 70, 63, 64, 69, 60,
            67, 66, 63, 79, 71, 61, 62, 75, 64, 63, 106, 66, 57, 63, 63, 62, 90, 71, 78, 73, 63, 67, 60, 63, 65, 68, 60, 70, 60, 107, 63, 82,
            64, 61, 73, 65, 60, 56, 63, 70, 75, 62, 65, 64, 62, 59, 72, 62, 63, 56, 66, 59, 63, 63, 77, 69, 61, 60, 60, 71, 61, 70, 98, 70,
            60, 56, 63, 73, 58, 78, 64, 68, 64, 68, 73, 64, 64, 61, 60, 62, 60, 84, 74, 61, 66, 78, 69, 55, 63, 70, 59, 60, 63, 107, 63, 55,
            59, 63, 104, 71, 108, 62, 64, 55, 67, 62, 60, 62, 57, 79, 109, 78, 129, 64, 73, 63, 72, 57, 92, 60, 67, 59, 73, 58, 69, 68, 59, 63,
            60, 58, 69, 77, 99, 62, 75, 60, 63, 70, 64, 71, 60, 67, 64, 60, 69, 72, 69, 65, 65, 60, 64, 64, 73, 57, 79, 64, 68, 87, 60, 65,
            65, 68, 56, 70, 66, 78, 64, 64, 72, 67, 86, 68, 131, 67, 61, 63, 59, 62, 67, 84, 65, 65, 64, 68, 62, 95, 61, 71, 64, 65, 83, 60,
            69, 63, 65, 105, 63, 89, 56, 65, 59, 69, 72, 70, 76, 64, 76, 60, 62, 59, 72, 64, 68, 64, 59, 63, 68, 99, 61, 64, 59, 74, 60, 60,
            71, 69, 75, 64, 68, 79, 73, 64, 111, 57, 77, 64, 68, 64, 59, 68, 64, 63, 55, 56, 64, 64, 60, 62, 70, 67, 68, 72, 69, 65, 85, 69,
            61, 57, 64, 60, 59, 79, 64, 74, 60, 63, 60, 75, 62, 61, 64, 64, 60, 77, 59, 62, 78, 65, 58, 61, 69, 59, 61, 61, 65, 63, 66, 76,
            76, 104, 79, 59, 63, 79, 70, 103, 63, 61, 76, 62, 68, 60, 62, 63, 77, 68, 57, 77, 60, 102, 62, 62, 62, 64, 63, 66, 76, 64, 59, 62,
            76, 98, 63, 64, 62, 63, 63, 57, 63, 73, 64, 59, 71, 74, 58, 64, 64, 60, 61, 63, 101, 108, 63, 61, 76, 58, 61, 72, 56, 62, 70, 75,
            59, 60, 69, 77, 61, 59, 58, 96, 61, 67, 69, 61, 60, 64, 106, 73, 65, 62, 75, 71, 77, 69, 68, 69, 61, 67, 64, 63, 71, 71, 68, 72,
            74, 63, 62, 65, 62, 81, 61, 61, 60, 56, 71, 61, 58, 75, 59, 63, 64, 70, 59, 61, 63, 69, 77, 62, 69, 58, 56, 64, 60, 57, 105, 67,
            71, 69, 64, 67, 71, 69, 60, 65, 74, 60, 61, 72, 64, 67, 64, 71, 63, 73, 66, 65, 62, 63, 62, 80, 76, 68, 64, 59, 65, 103, 86, 63,
            78, 107, 60, 62, 64, 68, 63, 64, 79, 64, 63, 93, 62, 63, 65, 63, 66, 63, 65, 63, 65, 72, 62, 107, 69, 58, 64, 72, 62, 111, 89, 69,
            74, 80, 56, 60, 61, 66, 63, 60, 89, 56, 70, 66, 67, 60, 62, 60, 67, 59, 60, 56, 62, 61, 64, 63, 65, 59, 106, 87, 125, 66, 77, 107,
            75, 59, 75, 60, 58, 75, 68, 74, 79, 63, 71, 60, 59, 65, 73, 55, 97, 73, 68, 61, 79, 62, 59, 66, 69, 65, 109, 71, 111, 59, 60, 61,
            71, 80, 64, 70, 60, 106, 67, 61, 64, 64, 64, 59, 104, 64, 89, 61, 64, 64, 63, 70, 67, 70, 67, 60, 61, 63, 64, 72, 62, 68, 64, 72,
            103, 71, 76, 63, 62, 74, 69, 65, 72, 76, 78, 67, 71, 59, 55, 64, 87, 68, 64, 65, 76, 63, 128, 82, 63, 65, 62, 78, 56, 67, 75, 64,
            76, 65, 64, 94, 71, 58, 64, 71, 60, 74, 64, 83, 67, 69, 61, 64, 79, 68, 62, 73, 56, 64, 61, 65, 68, 80, 73, 63, 76, 63, 62, 61,
            63, 64, 95, 68, 63, 85, 72, 78, 69, 76, 63, 62, 64, 63, 63, 63, 62, 60, 65, 65, 61, 56, 57, 63, 61, 83, 61, 59, 59, 84, 113, 69,
            73, 59, 64, 57, 67, 63, 56, 63, 65, 64, 64, 107, 63, 65, 65, 72, 73, 62, 61, 100, 72, 59, 60, 73, 64, 61, 63, 75, 60, 72, 105, 67,
            63, 73, 59, 61, 68, 101, 67, 74, 74, 81, 63, 80, 74, 60, 59, 64, 64, 62, 62, 74, 73, 66, 89, 73, 61, 63, 60, 64, 67, 73, 70, 61,
            67, 66, 107, 72, 95, 78, 59, 65, 59, 68, 63, 59, 68, 59, 65, 60, 72, 71, 73, 64, 63, 64, 64, 60, 65, 60, 67, 61, 93, 65, 59, 65,
            66, 60, 64, 63, 67, 61, 64, 64, 106, 71, 65, 65, 69, 61, 66, 64, 80, 64, 62, 64, 67, 62, 109, 86, 68, 61, 62, 84, 70, 81, 62, 65,
            63, 63, 63, 56, 82, 61, 64, 59, 62, 83, 71, 110, 60, 66, 64, 61, 62, 71, 64, 61, 65, 94, 61, 66, 83, 82, 62, 64, 58, 74, 74, 63,
            66, 67, 72, 71, 70, 67, 68, 78, 75, 65, 60, 82, 66, 62, 71, 63, 64, 89, 67, 94, 85, 67, 70, 64, 93, 103, 59, 64, 69, 61, 79, 61,
            62, 60, 65, 81, 71, 63, 66, 64, 61, 60, 61, 61, 92, 69, 63, 63, 63, 60, 69, 63, 63, 78, 59, 68, 76, 78, 64, 78, 77, 64, 75, 62,
            61, 104, 62, 98, 64, 71, 60, 61, 64, 65, 68, 76, 67, 63, 76, 69, 64, 59, 56, 60, 64, 106, 74, 62, 59, 109, 64, 63, 63, 64, 71, 61,
            69, 60, 60, 76, 84, 66, 60, 69, 56, 94, 71, 104, 70, 63, 78, 68, 75, 64, 63, 59, 60, 72, 64, 61, 61, 61, 60, 60, 60, 62, 64, 64
    };

    @Test
    @DisplayName("Test Height map version 1.13 size 16")
    public void size16() {
        randomChunkGen(MCVersion.v1_13, 541515181818L, Dimension.OVERWORLD, 16, 4227552225777L, size16);
    }

    @Test
    @DisplayName("Test Height version 1.13 map size 32")
    public void size32() {
        randomChunkGen(MCVersion.v1_13, 541515181818L, Dimension.OVERWORLD, 32, 21382138983289132L, size32);
    }

    //        Bootstrap.register();
    //        long seed = 541515181818L;
    //        NoiseChunkGenerator noiseChunkGenerator = new NoiseChunkGenerator(new OverworldBiomeProvider(seed, false, false), seed, OverworldPreset(new DimensionStructuresSettings(true), false));
    //        int size = 32;
    //        Random r = new Random(21382138983289132L);
    //        System.out.print("{");
    //        for (int i = 0; i < size; i++) {
    //            for (int j = 0; j < size; j++) {
    //                int x = r.nextInt(512);
    //                int z = r.nextInt(512);
    //                int y = noiseChunkGenerator.getOffset(x, z, Heightmap.Type.OCEAN_FLOOR_WG);
    //                System.out.printf("%d ,", y);
    //            }
    //            System.out.println();
    //        }
    //        System.out.print("};");
    //        System.out.println();

}
